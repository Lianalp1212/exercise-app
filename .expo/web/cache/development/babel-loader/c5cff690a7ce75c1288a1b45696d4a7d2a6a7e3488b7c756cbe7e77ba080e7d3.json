{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text, ButtonGroup } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport { useEffect, useState, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Unorderedlist from 'react-native-unordered-list';\nimport Likert from 'react-likert-scale';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HOME_SCREEN = \"Home\";\nvar DURATION_EXERCISE = \"Duration\";\nvar REPITITION_EXERCISE = \"Repetition\";\nvar FEEDBACK_SCREEN = \"Feedback\";\nvar THANKS_SCREEN = \"Thanks\";\nvar mQuotes = [\"It does not matter how slowly you go as long as you do not stop - Confucius\", \"It always seems impossible until it's done - Nelson Mandela\", \"The most effective way to do it, is to do it - Amelia Earhart\", \"Do the difficult things while they are easy and do the great things while they are small. A journey of a thousand miles must begin with a single step - Lao Tzu\", \"Setting goals is the first step in turning the invisible into the visible - Tony Robbins\", \"Just Do It - Shia LaBeouf\"];\nexport default function App(_ref) {\n  var exerciseList = _ref.exerciseList;\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: HOME_SCREEN,\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        initialParams: {\n          exerciseList: exerciseList\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Duration\",\n        component: DurationScreen,\n        initialParams: {\n          exerciseList: exerciseList\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Repetition\",\n        component: RepetitionScreen,\n        initialParams: {\n          exerciseList: exerciseList\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Feedback\",\n        component: FeedbackScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Thanks\",\n        component: ThanksScreen\n      })]\n    })\n  });\n}\nfunction HomeScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var exerciseList = [{\n    name: \"Running\",\n    type: DURATION_EXERCISE,\n    key: 1\n  }, {\n    name: \"Plank\",\n    type: DURATION_EXERCISE,\n    key: 2\n  }, {\n    name: \"Push Ups\",\n    type: REPITITION_EXERCISE,\n    key: 3\n  }, {\n    name: \"Squats\",\n    type: REPITITION_EXERCISE,\n    key: 4\n  }];\n  var renderExercise = function renderExercise(_ref3) {\n    var item = _ref3.item,\n      key = _ref3.key;\n    return _jsx(Button, {\n      title: item.name,\n      testID: item.name + \"-button\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(item.type === DURATION_EXERCISE ? DURATION_EXERCISE : REPITITION_EXERCISE, {\n          exerciseKey: key,\n          name: item.name\n        });\n      }\n    });\n  };\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedQuote = _useState2[0],\n    setSelectedQuote = _useState2[1];\n  var handleQuote = function handleQuote() {\n    var randomNum = Math.floor(Math.random() * mQuotes.length);\n    setSelectedQuote(mQuotes[randomNum]);\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Work It!\"\n      }), _jsx(Text, {\n        style: styles.quoteHeading,\n        children: \"Motivational Quote of the Day\"\n      }), _jsx(Text, {\n        style: styles.quote,\n        children: selectedQuote\n      }), _jsx(Button, {\n        title: \"Get Quote\",\n        titleStyle: {\n          color: 'black'\n        },\n        buttonStyle: {\n          margin: 6,\n          backgroundColor: '#B5E0A3'\n        },\n        onPress: function onPress() {\n          return handleQuote();\n        }\n      }), _jsx(Text, {\n        style: styles.subheading,\n        children: \"Please select an exercise\"\n      }), _jsx(FlatList, {\n        data: exerciseList,\n        renderItem: renderExercise,\n        keyExtractor: function keyExtractor(exercise) {\n          return exercise.key;\n        }\n      }), _jsx(Button, {\n        title: \"Leave Feedback\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Feedback\", FeedbackScreen);\n        },\n        style: {\n          margin: 20\n        },\n        color: \"#3BAC09\"\n      })]\n    })\n  });\n}\nvar currentTimer = 0;\nvar resetTimer = 0;\nfunction DurationScreen(_ref4) {\n  var navigation = _ref4.navigation,\n    route = _ref4.route;\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    running = _useState4[0],\n    setRunning = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    timer = _useState6[0],\n    setTimer = _useState6[1];\n  var updateTimer = useCallback(function () {\n    if (running) {\n      setTimer(function (timer) {\n        return timer + 10;\n      });\n    }\n  }, [running, setInterval]);\n  useEffect(function () {\n    if (running) {\n      currentTimer = setInterval(updateTimer, 10);\n    }\n    return function () {\n      return clearInterval(currentTimer);\n    };\n  }, [running, updateTimer]);\n  var start = useCallback(function () {\n    setRunning(!running);\n  }, [running]);\n  var reset = useCallback(function () {\n    clearInterval(currentTimer);\n    setTimer(resetTimer);\n  });\n  var mins = Math.floor(timer / (1000 * 60) % 60).toString().padStart(2, \"0\");\n  var secs = Math.floor(timer / 1000 % 60).toString().padStart(2, \"0\");\n  var mills = (timer % 1000).toString().padStart(3, \"0\");\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: route.params.name\n    }), _jsxs(Text, {\n      style: {\n        fontSize: \"3em\",\n        fontFamily: \"monospace\",\n        textAlign: 'center',\n        padding: 10\n      },\n      children: [\"Duration: \", mins, \":\", secs, \":\", mills]\n    }), _jsx(Button, {\n      title: \"Start\",\n      style: styles.exerciseButton,\n      onPress: start\n    }), _jsx(Button, {\n      title: \"Reset\",\n      style: styles.exerciseButton,\n      onPress: reset\n    }), _jsx(Button, {\n      title: \"Home\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    })]\n  });\n}\nfunction RepetitionScreen(_ref5) {\n  var navigation = _ref5.navigation,\n    route = _ref5.route;\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    count = _useState8[0],\n    setCount = _useState8[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: route.params.name\n    }), _jsx(Text, {\n      style: {\n        fontSize: \"3em\",\n        textAlign: 'center',\n        padding: 10\n      },\n      children: count\n    }), _jsx(Button, {\n      title: \"Add\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return setCount(function (count) {\n          return count + 1;\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Reset\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return setCount(0);\n      }\n    }), _jsx(Button, {\n      title: \"Home\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    })]\n  });\n}\nfunction ThanksScreen(_ref6) {\n  var navigation = _ref6.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Thank you for providing feedback on our app!\"\n    }), _jsx(Button, {\n      title: \"Home\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.navigate(\"Home\", HomeScreen);\n      }\n    })]\n  });\n}\nfunction FeedbackScreen(_ref7) {\n  var navigation = _ref7.navigation;\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectedIndex = _useState10[0],\n    setSelectedIndex = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedIndex2 = _useState12[0],\n    setSelectedIndex2 = _useState12[1];\n  var usefulScale = {\n    question: \"How useful was this app in tracking your workout?\",\n    choices: [\"Very Helpful\", \"Helpful\", \"Neutral\", \"Unhelpful\", \"Very Unhelpful\"]\n  };\n  var recScale = {\n    question: \"How likely are you to recommend this app to someone?\",\n    choices: [\"Very Likely\", \"Likely\", \"Neutral\", \"Unlikely\", \"Very Unnlikely\"]\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Please let us know your thoughts!\"\n    }), _jsx(Text, {\n      style: styles.subheading,\n      children: usefulScale.question\n    }), _jsx(ButtonGroup, {\n      buttons: usefulScale.choices,\n      selectedIndex: selectedIndex,\n      onPress: function onPress(value) {\n        setSelectedIndex(value);\n      },\n      containerStyle: {\n        marginBottom: 20,\n        textAlign: 'center'\n      }\n    }), _jsx(Text, {\n      style: styles.subheading,\n      children: recScale.question\n    }), _jsx(ButtonGroup, {\n      buttons: recScale.choices,\n      selectedIndex: selectedIndex2,\n      onPress: function onPress(value) {\n        setSelectedIndex2(value);\n      },\n      containerStyle: {\n        marginBottom: 20,\n        textAlign: 'center'\n      }\n    }), _jsx(Text, {\n      style: styles.subheading,\n      children: \"Any other comments?\"\n    }), _jsx(Input, {\n      placeholder: \"Other comments...\"\n    }), _jsx(Button, {\n      title: \"Submit\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.navigate(\"Thanks\", ThanksScreen);\n      }\n    }), _jsx(Button, {\n      title: \"Home\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  exerciseButton: {\n    margin: 6\n  },\n  fbButton: {\n    margin: 6,\n    backgroundColor: '#3BAC09'\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20,\n    fontWeight: 'bold'\n  },\n  subheading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  },\n  quoteHeading: {\n    fontSize: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 35,\n    backgroundColor: '#B5E0A3'\n  },\n  quote: {\n    fontSize: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  },\n  quoteButton: {\n    margin: 6,\n    backgroundColor: '#B5E0A3'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","ButtonGroup","Font","useEffect","useState","useCallback","NavigationContainer","createNativeStackNavigator","StackActions","React","SafeAreaView","Unorderedlist","Likert","jsx","_jsx","jsxs","_jsxs","Stack","HOME_SCREEN","DURATION_EXERCISE","REPITITION_EXERCISE","FEEDBACK_SCREEN","THANKS_SCREEN","mQuotes","App","_ref","exerciseList","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","initialParams","DurationScreen","RepetitionScreen","FeedbackScreen","ThanksScreen","_ref2","navigation","type","key","renderExercise","_ref3","item","title","testID","style","styles","button","onPress","navigate","exerciseKey","_useState","_useState2","_slicedToArray","selectedQuote","setSelectedQuote","handleQuote","randomNum","Math","floor","random","length","container","heading","quoteHeading","quote","titleStyle","color","buttonStyle","margin","backgroundColor","subheading","data","renderItem","keyExtractor","exercise","currentTimer","resetTimer","_ref4","route","_useState3","_useState4","running","setRunning","_useState5","_useState6","timer","setTimer","updateTimer","setInterval","clearInterval","start","reset","mins","toString","padStart","secs","mills","params","fontSize","fontFamily","textAlign","padding","exerciseButton","goBack","_ref5","_useState7","_useState8","count","setCount","_ref6","_ref7","_useState9","_useState10","selectedIndex","setSelectedIndex","_useState11","_useState12","selectedIndex2","setSelectedIndex2","usefulScale","question","choices","recScale","buttons","value","containerStyle","marginBottom","placeholder","create","flex","alignItems","justifyContent","horizontal","flexDirection","fbButton","space","height","fontWeight","quoteButton"],"sources":["C:/Users/5duck/github-classroom/exercise-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text, ButtonGroup } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport Unorderedlist from 'react-native-unordered-list';\r\nimport Likert from 'react-likert-scale';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n// async function cacheFonts(fonts) {\r\n//   return fonts.map(async (font) => await Font.loadAsync(font))\r\n// }\r\n\r\nconst HOME_SCREEN = \"Home\"\r\nconst DURATION_EXERCISE = \"Duration\"\r\nconst REPITITION_EXERCISE = \"Repetition\"\r\nconst FEEDBACK_SCREEN = \"Feedback\"\r\nconst THANKS_SCREEN = \"Thanks\"\r\n\r\nlet mQuotes = [\r\n  \"It does not matter how slowly you go as long as you do not stop - Confucius\",\r\n  \"It always seems impossible until it's done - Nelson Mandela\",\r\n  \"The most effective way to do it, is to do it - Amelia Earhart\",\r\n  \"Do the difficult things while they are easy and do the great things while they are small. A journey of a thousand miles must begin with a single step - Lao Tzu\",\r\n  \"Setting goals is the first step in turning the invisible into the visible - Tony Robbins\",\r\n  \"Just Do It - Shia LaBeouf\",\r\n]\r\n\r\nexport default function App({exerciseList}) {\r\n    return (\r\n      <NavigationContainer>{\r\n        <Stack.Navigator initialRouteName={HOME_SCREEN}>\r\n          <Stack.Screen name=\"Home\" component={HomeScreen} initialParams={{exerciseList: exerciseList}}></Stack.Screen>\r\n          <Stack.Screen name=\"Duration\" component={DurationScreen} initialParams={{exerciseList: exerciseList}}></Stack.Screen>\r\n          <Stack.Screen name=\"Repetition\" component={RepetitionScreen} initialParams={{exerciseList: exerciseList}}></Stack.Screen>\r\n          <Stack.Screen name=\"Feedback\" component={FeedbackScreen}></Stack.Screen>\r\n          <Stack.Screen name=\"Thanks\" component={ThanksScreen}></Stack.Screen>\r\n        </Stack.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction HomeScreen({navigation}) {\r\n  let exerciseList = [\r\n    {name: \"Running\", type: DURATION_EXERCISE, key: 1},\r\n    {name: \"Plank\", type: DURATION_EXERCISE, key: 2},\r\n    {name: \"Push Ups\", type: REPITITION_EXERCISE, key: 3},\r\n    {name: \"Squats\", type: REPITITION_EXERCISE, key: 4},\r\n  ] \r\n  let renderExercise = ({item, key}) => \r\n    <Button title={item.name} testID={`${item.name}-button`} style={styles.button}\r\n      onPress={() => navigation.navigate(item.type === DURATION_EXERCISE ? DURATION_EXERCISE : REPITITION_EXERCISE, {exerciseKey: key, name: item.name})}\r\n    ></Button>\r\n    const [selectedQuote, setSelectedQuote] = useState(\"\")\r\n    let handleQuote = () => {\r\n      let randomNum = Math.floor(Math.random() * mQuotes.length)\r\n      setSelectedQuote(mQuotes[randomNum])\r\n    }\r\n    return (\r\n    <SafeAreaView>\r\n      <View style={styles.container}>\r\n        <Text style={styles.heading}>Work It!</Text>\r\n        <Text style={styles.quoteHeading}>Motivational Quote of the Day</Text>\r\n        <Text style={styles.quote}>{selectedQuote}</Text>\r\n        <Button title=\"Get Quote\"\r\n          titleStyle={{\r\n            color:'black'\r\n          }}\r\n          buttonStyle={{\r\n            margin: 6,\r\n            backgroundColor: '#B5E0A3'\r\n          }}\r\n          onPress={() => handleQuote()}\r\n        ></Button>\r\n        <Text style={styles.subheading}>Please select an exercise</Text>\r\n          <FlatList data={exerciseList}\r\n            renderItem={renderExercise}\r\n            keyExtractor={(exercise) =>exercise.key}>\r\n          </FlatList>\r\n          <Button title=\"Leave Feedback\" \r\n            onPress={() => navigation.navigate(\"Feedback\", FeedbackScreen)}\r\n            style={{margin: 20}}\r\n            color= '#3BAC09'\r\n          ></Button>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nlet currentTimer = 0\r\nlet resetTimer = 0\r\nfunction DurationScreen({navigation, route}) {\r\n    let [running, setRunning] = useState(false)\r\n    let [timer, setTimer] = useState(0)\r\n    // let [lapper, setLapper] = useState(0)\r\n    // let [lappedTimes, setLappedTimes] = useState([])\r\n    let updateTimer = useCallback(() => {\r\n        if(running){\r\n            setTimer((timer) => timer+10)\r\n        }\r\n    }, [running, setInterval])\r\n\r\n  //   let updateLapper = useCallback(() => {\r\n  //     if(!running){\r\n  //         setLappedTimes([...lappedTimes, timer])\r\n  //         setLapper(timer)\r\n  //     }\r\n  // }, [running, timer, lappedTimes])\r\n\r\n  // let recLaps = lappedTimes.map((lapTime, index) => {\r\n  //     let mins2 = (Math.floor((lapTime / (1000*60)) % 60)).toString().padStart(2, \"0\")\r\n  //     let secs2 = (Math.floor((lapTime / 1000) % 60)).toString().padStart(2, \"0\")\r\n  //     let mills2 =  (timer % 1000).toString().padStart(3, \"0\")\r\n  //     return <Unorderedlist key={index}>{mins2}:{secs2}:{mills2}</Unorderedlist>\r\n  //     })\r\n\r\n    useEffect(() => {\r\n      if (running) {\r\n        currentTimer = setInterval(updateTimer, 10)\r\n      }  \r\n        return () => clearInterval(currentTimer)\r\n    }, [running, updateTimer])\r\n\r\n    let start = useCallback(() => {\r\n        setRunning(!running)\r\n    }, [running])\r\n\r\n    let reset = useCallback(() => {\r\n        clearInterval(currentTimer)\r\n        setTimer(resetTimer)\r\n    })\r\n\r\n    let mins = (Math.floor((timer / (1000*60)) % 60)).toString().padStart(2, \"0\")\r\n    let secs = (Math.floor((timer / 1000) % 60)).toString().padStart(2, \"0\")\r\n    let mills =  (timer % 1000).toString().padStart(3, \"0\")\r\n    return (\r\n        <View style={styles.container}>\r\n          <Text style={styles.heading}>{route.params.name}</Text>\r\n          <Text style={{fontSize: \"3em\", fontFamily:\"monospace\", textAlign: 'center', padding: 10}}>Duration: {mins}:{secs}:{mills}</Text>\r\n          <Button title=\"Start\" style={styles.exerciseButton} onPress={start}></Button>\r\n          <Button title=\"Reset\" style={styles.exerciseButton} onPress={reset}></Button>\r\n          <Button title=\"Home\" style={styles.exerciseButton} onPress={() => navigation.goBack()}></Button>  \r\n        </View>\r\n    )\r\n}\r\n\r\nfunction RepetitionScreen({navigation, route}) {\r\n    let [count, setCount] = useState(0)\r\n    return <View style={styles.container}>\r\n      <Text style={styles.heading}>{route.params.name}</Text>\r\n      <Text style={{fontSize: \"3em\", textAlign: 'center', padding: 10}}>{count}</Text>\r\n      <Button title=\"Add\" style={styles.exerciseButton} onPress={()=>setCount(count=>count+1)}></Button>\r\n      <Button title=\"Reset\" style={styles.exerciseButton} onPress={()=>setCount(0)}></Button>\r\n      <Button title=\"Home\" style={styles.exerciseButton} onPress={() => navigation.goBack()}></Button>\r\n    </View>\r\n}\r\n\r\nfunction ThanksScreen ({navigation}) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Thank you for providing feedback on our app!</Text>\r\n      <Button title=\"Home\" style={styles.exerciseButton} onPress={() => navigation.navigate(\"Home\", HomeScreen)}></Button>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction FeedbackScreen({navigation}) {\r\n  const [selectedIndex, setSelectedIndex] = useState(0)\r\n  const [selectedIndex2, setSelectedIndex2] = useState(0)\r\n  const usefulScale = {\r\n    question: \"How useful was this app in tracking your workout?\",\r\n    choices: [\r\n      \"Very Helpful\",\r\n      \"Helpful\",\r\n      \"Neutral\",\r\n      \"Unhelpful\",\r\n      \"Very Unhelpful\",\r\n    ]\r\n  }\r\n  const recScale = {\r\n    question: \"How likely are you to recommend this app to someone?\",\r\n    choices: [\r\n      \"Very Likely\",\r\n      \"Likely\",\r\n      \"Neutral\",\r\n      \"Unlikely\",\r\n      \"Very Unnlikely\",\r\n    ]\r\n  }\r\n  // <Likert {...usefulScale}/>\r\n  //     <Likert {...recScale} />\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Please let us know your thoughts!</Text>\r\n      <Text style={styles.subheading}>{usefulScale.question}</Text>\r\n      <ButtonGroup buttons={usefulScale.choices}\r\n        selectedIndex={selectedIndex}\r\n        onPress={(value) => {\r\n          setSelectedIndex(value)\r\n        }}\r\n        containerStyle={{ marginBottom: 20, textAlign: 'center'}}\r\n      ></ButtonGroup>\r\n      <Text style={styles.subheading}>{recScale.question}</Text>\r\n      <ButtonGroup buttons={recScale.choices}\r\n        selectedIndex={selectedIndex2}\r\n        onPress={(value) => {\r\n          setSelectedIndex2(value)\r\n        }}\r\n        containerStyle={{ marginBottom: 20, textAlign: 'center'}}\r\n      ></ButtonGroup>\r\n      <Text style={styles.subheading}>Any other comments?</Text>\r\n      <Input placeholder=\"Other comments...\"></Input>\r\n      <Button title=\"Submit\" style={styles.exerciseButton} onPress={() => navigation.navigate(\"Thanks\", ThanksScreen)}></Button>\r\n      <Button title=\"Home\" style={styles.exerciseButton} onPress={() => navigation.goBack()}></Button>\r\n    </View>    \r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  exerciseButton: {\r\n    margin: 6,\r\n  },\r\n  fbButton: {\r\n    margin: 6,\r\n    backgroundColor: '#3BAC09', \r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n    fontWeight: 'bold'\r\n  },\r\n  subheading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20\r\n  },\r\n  quoteHeading: {\r\n    fontSize: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 35,\r\n    backgroundColor: '#B5E0A3',\r\n  },\r\n  quote: {\r\n    fontSize: 15,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20,\r\n    //backgroundColor: '#B5E0A3',\r\n  },\r\n  quoteButton: {\r\n    margin: 6,\r\n    backgroundColor: '#B5E0A3',\r\n  },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}